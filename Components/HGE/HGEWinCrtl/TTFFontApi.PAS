unit TTFFontApi;
{**************************************************************************}
{                                                                          }
{    This C DLL header file first (automatic) conversion generated by:     }
{    HeadConv 4.0 (c) 2000 by Bob Swart (aka Dr.Bob - www.drbob42.com)     }
{      Final Delphi-Jedi (Darth) command-line units edition                }
{                                                                          }
{    Generated Date:  2008-11-3                                            }
{    Generated Time: 17:57:18                                              }
{                                                                          }
{**************************************************************************}

interface
uses
{$IFDEF WIN32}
  Windows;
{$ELSE}
  Wintypes, WinProcs;
{$ENDIF}




const
  FT_LOAD_DEFAULT = $0;
const
  FT_LOAD_NO_SCALE = $1;
const
  FT_LOAD_NO_HINTING = $2;
const
  FT_LOAD_RENDER = $4;
const
  FT_LOAD_NO_BITMAP = $8;
const
  FT_LOAD_VERTICAL_LAYOUT = $10;
const
  FT_LOAD_FORCE_AUTOHINT = $20;
const
  FT_LOAD_CROP_BITMAP = $40;
const
  FT_LOAD_PEDANTIC = $80;
const
  FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH = $200;
const
  FT_LOAD_NO_RECURSE = $400;
const
  FT_LOAD_IGNORE_TRANSFORM = $800;
const
  FT_LOAD_MONOCHROME = $1000;
const
  FT_LOAD_LINEAR_DESIGN = $2000;
const
  FT_LOAD_SBITS_ONLY = $4000;
const
  FT_LOAD_NO_AUTOHINT = $8000;

  FT_KERNING_DEFAULT   = 0;
  FT_KERNING_UNFITTED  = 1;
  FT_KERNING_UNSCALED  = 2;

const
  TTFFontdll = 'TTFFont.dll';

type
  FT_Int32 = Integer;

type
  FT_Int = Integer;
type
  FT_UInt = Word;
type
  FT_Long = LongInt;
type
  FT_ULong = LongInt;
type
  FT_Pos = LongInt;
type
  FT_Error = LongInt;




type
  FT_Bitmap_ = record
    rows: Integer;
    width: Integer;
    pitch: Integer;
    buffer: PByte;
    num_grays: SmallInt;
    pixel_mode: Char;
    palette_mode: Char;
    palette: Pointer;
  end {FT_Bitmap_};
  FT_Bitmap  = FT_Bitmap_;
  PFT_Bitmap = ^FT_Bitmap_;

type
  FT_Vector = record
    x: FT_POS;
    y: FT_POS;
  end {FT_Vector_};


type
  C_Face = record
    Face       : Pointer;
    charmap    : Pointer;
    bitmap     : PFT_BITMAP;
    advance    : FT_VECTOR;
    bitmap_left: FT_INT;
    bitmap_top : FT_INT;
  end {C_Face};


function C_FT_New_Face(Plibrary: Pointer; const filepathname: PChar;face_index: FT_LONG; var aface: C_FACE): Integer;stdcall;
function C_FT_IS_SCALABLE(aface: C_FACE): Integer;stdcall;
function C_FT_Done_Face(aface: C_FACE): Integer;stdcall;
function C_FT_HAS_KERNING(aface: C_FACE): Integer;stdcall;
function C_FT_Get_Char_Index(aface: C_FACE; charcode: FT_ULONG): Integer;stdcall;
function C_FT_Load_Glyph(var aface: C_FACE; glyph_index: FT_UINT;load_flags: FT_INT32): Integer;stdcall;
function C_FT_Get_Kerning(aface: C_FACE;left_glyph: FT_UINT;right_glyph: FT_UINT;kern_mode: FT_UINT; var akerning: FT_VECTOR): Integer;stdcall;
function C_FT_Set_Pixel_Sizes(aface: C_FACE; pixel_width: FT_UINT; pixel_height: FT_UINT): Integer;stdcall;
function C_FT_Done_FreeType(plibrary: Pointer): Integer ;stdcall;
function C_FT_Init_FreeType(var alibrary: Pointer): Integer;stdcall;



implementation


function C_FT_New_Face;           external    TTFFontdll name 'C_FT_New_Face';
function C_FT_IS_SCALABLE;        external    TTFFontdll name 'C_FT_IS_SCALABLE';
function C_FT_Done_Face;          external    TTFFontdll name 'C_FT_Done_Face';
function C_FT_HAS_KERNING;        external    TTFFontdll name 'C_FT_HAS_KERNING';
function C_FT_Get_Char_Index;     external    TTFFontdll name 'C_FT_Get_Char_Index';
function C_FT_Load_Glyph;         external    TTFFontdll name 'C_FT_Load_Glyph';
function C_FT_Get_Kerning;        external    TTFFontdll name 'C_FT_Get_Kerning';
function C_FT_Set_Pixel_Sizes;    external    TTFFontdll name 'C_FT_Set_Pixel_Sizes';
function C_FT_Done_FreeType;      external    TTFFontdll name 'C_FT_Done_FreeType';
function C_FT_Init_FreeType;      external    TTFFontdll name 'C_FT_Init_FreeType';





end.
